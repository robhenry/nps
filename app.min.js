angular.module("npsApp",["ngResource","ngRoute","smart-table","ordinal"]).config(function($routeProvider){"use strict";$routeProvider.when("/compareRiders",{templateUrl:"templates/compareRiders.html",controller:"CompareController"}).when("/riders",{templateUrl:"templates/riders.html",controller:"RiderController"}).when("/rider-info",{templateUrl:"templates/rider-info.html",controller:"RiderInfoController"}).otherwise({redirectTo:"/riders"})}),angular.module("npsApp").controller("HomeController",["$scope","dataService","$log",function($scope,dataService,$log){"use strict";$scope.SectionHeader="NPS App"}]),angular.module("npsApp").controller("RiderController",["$scope","$log","riderService",function($scope,$log,riderService){"use strict";riderService.build().then(function(riders){$scope.riders=riders,$scope.displayedCollection=[].concat($scope.rowCollection)})}]),angular.module("npsApp").controller("RiderInfoController",["$scope","$log","riderService","resultService","_",function($scope,$log,riderService,resultService,_){"use strict";$scope.filter_results=function(rider){$scope.rider_results=_.where($scope.results,{Name:$scope.selected_rider.Name,Club:$scope.selected_rider.Club}),$scope.displayedCollection=[].concat($scope.rowCollection)},riderService.build().then(function(riders){$scope.riders=riders=_.sortBy(riders,"Name"),$scope.selected_rider=riders[0],resultService.build().then(function(results){$scope.results=results,$scope.filter_results($scope.selected_rider)})})}]),angular.module("npsApp").factory("dataService",["$resource","$q","$log",function($resource,$q,$log){return{getAllByCategoryAndYear:function(year,category){var promises=[];for(i=1;i<=5;i++){var resource=$resource("data/"+year+"/"+category+"/"+i+".json",{},{query:{method:"GET",cache:!0}}).query();promises.push(resource.$promise)}return $q.all(promises)}}}]),angular.module("npsApp").factory("_",["$window",function($window){var _=$window._;return delete $window._,_}]),angular.module("npsApp").factory("raceService",["$resource","$q","$log","dataService","_",function($resource,$q,$log,dataService,_){return{getRace:function(course){return dataService.getAllByCategoryAndYear("2015","S3").then(function(races){var race=_.find(races,{Course:course});race.RidersCompletingCourse=race.Results.length(),angular.forEach(race.Results,function(result){1===result.Position&&(race.fastestResult=result)})})}}}]),angular.module("npsApp").factory("resultService",["$log","dataService","_",function($log,dataService,_){function buildResults(races){var results=[];return angular.forEach(races,function(race){var winner=_.find(race.Results,{Position:1});$log.log(winner),angular.forEach(race.Results,function(result){result.Course=race.Course,result.Date=race.Date,result.TimeBehindLeader=result.TotalTime-winner.TotalTime,results.push(result)})}),results}return{build:function(){return dataService.getAllByCategoryAndYear("2015","S3").then(function(races){return buildResults(races)})}}}]),angular.module("npsApp").factory("riderService",["$log","dataService","_",function($log,dataService,_){function buildRiders(races){var riders=[];for(angular.forEach(races,function(race){angular.forEach(race.Results,function(result){var rider=_.find(riders,{Name:result.Name,Club:result.Club});rider?(rider.Raced++,rider.Points+=scoreRace(result.Position),rider.BestPosition=Math.min(result.Position,rider.BestPosition)):riders.push({Name:result.Name,Club:result.Club,Raced:1,Points:scoreRace(result.Position),BestPosition:result.Position})})}),riders=_.sortBy(riders,"Points").reverse(),i=1;i<=riders.length;i++)riders[i-1].Overall=i;return riders}function scoreRace(position){var scores=[];scores.push({position:1,points:30}),scores.push({position:2,points:25}),scores.push({position:3,points:21}),scores.push({position:4,points:18}),scores.push({position:5,points:16}),scores.push({position:6,points:14}),scores.push({position:7,points:12}),scores.push({position:8,points:11}),scores.push({position:9,points:10}),scores.push({position:10,points:9}),scores.push({position:11,points:8}),scores.push({position:12,points:7}),scores.push({position:13,points:6}),scores.push({position:14,points:5}),scores.push({position:15,points:4}),scores.push({position:16,points:3}),scores.push({position:17,points:2});var score=_.find(scores,{position:position});return score?score.points:1}return{build:function(){return dataService.getAllByCategoryAndYear("2015","S3").then(function(races){return buildRiders(races)})}}}]);